{"ast":null,"code":"import _objectSpread from\"/Users/christan/Desktop/EYUP/GHPAGES/Voting-application/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/christan/Desktop/EYUP/GHPAGES/Voting-application/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import{Button,Form}from\"react-bootstrap\";import toastr from\"toastr\";import\"toastr/build/toastr.min.css\";import{validSignupInputs}from\"./validSignupInputs.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Signup=function Signup(_ref){var client=_ref.client;var navigate=useNavigate();var initialFormState={username:\"\",password:\"\",passwordConfirmation:\"\"};var _useState=useState(initialFormState),_useState2=_slicedToArray(_useState,2),formValues=_useState2[0],changeFormValues=_useState2[1];var handleChange=function handleChange(event){event.preventDefault();var newState=_objectSpread({},formValues);newState[event.target.name]=event.target.value;changeFormValues(newState);};var signupHandler=function signupHandler(event){event.preventDefault();if(validSignupInputs(formValues)){client.signup(formValues).then(function(_ref2){var data=_ref2.data;client.changeToken(data.token);client.changeUserId(data.userid);changeFormValues(initialFormState);navigate(\"/\");});}else{toastr[\"error\"](\"Check input fields for errors.\",\"Invalid Signup\");}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Username\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,name:\"username\",type:\"text\",value:formValues.username,onChange:function onChange(event){return handleChange(event);}})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,name:\"password\",type:\"password\",value:formValues.password,onChange:function onChange(event){return handleChange(event);}})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password Confirmation\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,name:\"passwordConfirmation\",type:\"password\",value:formValues.passwordConfirmation,onChange:function onChange(event){return handleChange(event);}})]}),/*#__PURE__*/_jsx(Button,{className:\"loginButtons\",variant:\"primary\",type:\"submit\",onClick:function onClick(event){signupHandler(event);},children:\"Sign up\"})]}),/*#__PURE__*/_jsx(Button,{className:\"loginButtons\",variant:\"primary\",onClick:function onClick(){return navigate(\"/\");},children:\"Back to Login\"})]});};export default Signup;","map":{"version":3,"names":["useState","useNavigate","Button","Form","toastr","validSignupInputs","Signup","client","navigate","initialFormState","username","password","passwordConfirmation","formValues","changeFormValues","handleChange","event","preventDefault","newState","target","name","value","signupHandler","signup","then","data","changeToken","token","changeUserId","userid"],"sources":["/Users/christan/Desktop/EYUP/GHPAGES/Voting-application/client/src/Signup.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { Button, Form } from \"react-bootstrap\";\nimport toastr from \"toastr\";\nimport \"toastr/build/toastr.min.css\";\n\nimport { validSignupInputs } from \"./validSignupInputs.js\"\n\nconst Signup = ({ client }) => {\n  const navigate = useNavigate();\n\n  const initialFormState = {\n    username: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n  };\n\n  const [formValues, changeFormValues] = useState(initialFormState);\n\n  const handleChange = (event) => {\n    event.preventDefault();\n    const newState = { ...formValues };\n    newState[event.target.name] = event.target.value;\n    changeFormValues(newState);\n  };\n\n  const signupHandler = (event) => {\n    event.preventDefault();\n    if (validSignupInputs(formValues)) {\n      client.signup(formValues).then(\n        ({ data }) => {\n          client.changeToken(data.token);\n          client.changeUserId(data.userid);\n          changeFormValues(initialFormState);\n          navigate(\"/\");\n        }\n      );\n    } else {\n      toastr[\"error\"](\"Check input fields for errors.\", \"Invalid Signup\");\n    }\n  };\n\n  return (\n    <>\n      <Form>\n        <Form.Group>\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            required\n            name=\"username\"\n            type=\"text\"\n            value={formValues.username}\n            onChange={(event) => handleChange(event)}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            required\n            name=\"password\"\n            type=\"password\"\n            value={formValues.password}\n            onChange={(event) => handleChange(event)}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Password Confirmation</Form.Label>\n          <Form.Control\n            required\n            name=\"passwordConfirmation\"\n            type=\"password\"\n            value={formValues.passwordConfirmation}\n            onChange={(event) => handleChange(event)}\n          />\n        </Form.Group>\n        <Button\n        className = \"loginButtons\"\n          variant=\"primary\"\n          type=\"submit\"\n          onClick={(event) => {\n            signupHandler(event);\n          }}\n        >\n          Sign up\n        </Button>\n      </Form>\n      <Button className = \"loginButtons\" variant=\"primary\" onClick={() => navigate(\"/\")}>\n        Back to Login\n      </Button>\n    </>\n  );\n};\n\nexport default Signup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
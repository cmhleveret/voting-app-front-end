{"ast":null,"code":"import _objectSpread from\"/Users/christan/Desktop/EYUP/GHPAGES/Voting-application/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/christan/Desktop/EYUP/GHPAGES/Voting-application/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import{Button,Container,Form}from\"react-bootstrap\";import{useNavigate}from\"react-router-dom\";import toastr from\"toastr\";import\"toastr/build/toastr.min.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Login=function Login(_ref){var client=_ref.client;var navigate=useNavigate();var initialFormState={username:\"\",password:\"\"};var _useState=useState(initialFormState),_useState2=_slicedToArray(_useState,2),formValues=_useState2[0],changeFormValues=_useState2[1];var validLoginInputs=function validLoginInputs(formValues){var username=formValues.username,password=formValues.password;if(!username||!password){return false;}return true;};var handleChange=function handleChange(event){event.preventDefault();var newState=_objectSpread({},formValues);newState[event.target.name]=event.target.value;changeFormValues(newState);};var loginHandler=function loginHandler(event){event.preventDefault();if(validLoginInputs(formValues)){client.login(formValues).then(function(_ref2){var data=_ref2.data;client.changeToken(data.token);client.changeUserId(data.userid);changeFormValues(initialFormState);}).catch(function(error){console.log(error);toastr[\"error\"](\"Username or password are invalid.\",\"Invalid Login\");});}else{toastr[\"error\"](\"Check input fields for errors.\",\"Invalid Login\");}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Username\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,name:\"username\",type:\"text\",value:formValues.username,onChange:function onChange(event){return handleChange(event);}})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,name:\"password\",type:\"password\",value:formValues.password,onChange:function onChange(event){return handleChange(event);}})]}),/*#__PURE__*/_jsx(Button,{className:\"loginButtons\",variant:\"primary\",type:\"submit\",onClick:function onClick(event){loginHandler(event);},children:\"Login\"})]}),/*#__PURE__*/_jsx(Button,{className:\"loginButtons\",variant:\"primary\",onClick:function onClick(){return navigate(\"/newuser\");},children:\"Sign up!\"})]})});};export default Login;","map":{"version":3,"names":["useState","Button","Container","Form","useNavigate","toastr","Login","client","navigate","initialFormState","username","password","formValues","changeFormValues","validLoginInputs","handleChange","event","preventDefault","newState","target","name","value","loginHandler","login","then","data","changeToken","token","changeUserId","userid","catch","error","console","log"],"sources":["/Users/christan/Desktop/EYUP/GHPAGES/Voting-application/client/src/Login.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { Button, Container, Form } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport toastr from \"toastr\";\nimport \"toastr/build/toastr.min.css\";\n\nconst Login = ({ client }) => {\n  const navigate = useNavigate();\n\n  const initialFormState = {\n    username: \"\",\n    password: \"\",\n  };\n\n  const [formValues, changeFormValues] = useState(initialFormState);\n\n  const validLoginInputs = (formValues) => {\n    const { username, password } = formValues;\n\n    if (!username || !password) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleChange = (event) => {\n    event.preventDefault();\n    const newState = { ...formValues };\n    newState[event.target.name] = event.target.value;\n    changeFormValues(newState);\n  };\n\n  const loginHandler = (event) => {\n    event.preventDefault();\n    if (validLoginInputs(formValues)) {\n      client\n        .login(formValues)\n        .then(({ data }) => {\n          client.changeToken(data.token);\n          client.changeUserId(data.userid);\n          changeFormValues(initialFormState);\n        })\n        .catch((error) => {\n          console.log(error);\n          toastr[\"error\"](\"Username or password are invalid.\", \"Invalid Login\");\n        });\n    } else {\n      toastr[\"error\"](\"Check input fields for errors.\", \"Invalid Login\");\n    }\n  };\n\n  return (\n    <>\n      <Container>\n        <Form>\n          <Form.Group>\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              required\n              name=\"username\"\n              type=\"text\"\n              value={formValues.username}\n              onChange={(event) => handleChange(event)}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name=\"password\"\n              type=\"password\"\n              value={formValues.password}\n              onChange={(event) => handleChange(event)}\n            />\n          </Form.Group>\n          <Button className = \"loginButtons\"\n            variant=\"primary\"\n            type=\"submit\"\n            onClick={(event) => {\n              loginHandler(event);\n            }}\n          >\n            Login\n          </Button>\n        </Form>\n        <Button className = \"loginButtons\" variant=\"primary\" onClick={() => navigate(\"/newuser\")}>\n          Sign up!\n        </Button>\n      </Container>\n    </>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}